name: Pytest's test suite
on:
  push:
    branches:
      - master
  pull_request:
env:
  PYTHON_VERSION: 3.9.9
jobs:
  pytest:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: solawi
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2.4.0

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup poetry
        uses: Gr1N/setup-poetry@v7

      - name: Setup cache
        uses: actions/cache@v2.1.7
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies with Poetry
        run: |
          poetry install

      - run: |
          poetry run pip install codecov

      - run: poetry run pytest --cov=./
        env:
          DATABASE_URL: postgresql://postgres:password@localhost/solawi
          DATABASE_URL_TEST: postgresql://postgres:password@localhost/solawi
          SECRET_KEY: required_but_unused_in_test

      - run: poetry run codecov
